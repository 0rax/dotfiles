# Git Commiter information
[user]
	name = JP Roemer
	email = jp@roemer.im
	signingkey = 6FF4678C

# GPG Integration configuration
[commit]
	gpgsign = false

# Git base config
[core]
	excludesfile = /home/orax/.gitignore_global
	autocrlf = input
	eol = lf
[push]
	default = current
[rebase]
	autostash = true
	autosquash = true

# Git remote rewriting
[url "git@github.com:"]
	insteadOf = https://github.com/
[url "git@bitbucket.org:"]
	insteadOf = https://bitbucket.org/

# Git alias
[alias]
	# git info
	st = status
	info = remote show origin
	size = count-objects -vH
	unpushed = log --stat origin/master..HEAD
	root = rev-parse --show-toplevel
	# git clone
	rclone = clone --recursive
	# git management
	co = checkout
	cb = checkout -b
	fa = fetch --all
	# git commit
	commit-nogpg = commit --no-gpg-sign
	ci = commit
	ci-nogpg = commit --no-gpg-sign
	edit = commit --amend
	ic = add -p
	# git branch
	fresh-branch = checkout --orphan
	# git search
	gg = grep --break --heading -n
	# git diff
	sdiff = diff --staged
	wdiff = diff --word-diff
	ndiff = diff --name-only
	sndiff = diff --staged --name-only
	# https://blog.filippo.io/git-fixup-amending-an-older-commit/
	fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
	# git logs
	file = log --graph --pretty=oneline --shortstat --abbrev-commit
	alog = log --graph --abbrev-commit --decorate --date=relative --format=prettylog --all
	slog = log --abbrev-commit --decorate --date=relative --format=prettylog --shortstat -30
	flog = log --graph --abbrev-commit --decorate --date=relative --stat --show-signature

# Git color
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[pretty]
	prettylog = format:%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(magenta bold)[%G?]%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)

# Difftool
[diff]
	tool = vscode
[difftool]
	prompt = false
[difftool "vscode"]
	cmd = code -n --wait --diff "$LOCAL" "$REMOTE"
	trustExitCode = false
[difftool "meld"]
	cmd = meld "$LOCAL" "$REMOTE"

# Mergetool
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait "$MERGED"
[mergetool "meld"]
	cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
[mergetool "meld-base"]
	cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"

# Git LFS
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[pull]
	rebase = false
[init]
	defaultBranch = main
